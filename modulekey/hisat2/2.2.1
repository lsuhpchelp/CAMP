#%Module

# =====================================================================
# Generated by CAMP (Containerized Application Modulekey Producer)
# Developer: Jason Li (jasonli3@lsu.edu)
# =====================================================================

# ---------------------------------------------------------------------
# Software specific information
# ---------------------------------------------------------------------

# Conflicts
conflict hisat2 

# Module information
module-whatis HISAT2 is a fast and sensitive alignment program for mapping next-generation sequencing reads (both DNA and RNA) to a population of human genomes as well as to a single reference genome.
module-version 2.2.1

# Singularity options
set SINGULARITY_IMAGE "/home/admin/singularity/hisat2-2.2.1.sif"
set SINGULARITY_BINDPATHS "/work,/project,/usr/local/packages,/ddnA,/var/scratch,"
set SINGULARITY_FLAGS ""

# List of commands to overwrite
set cmds {
hisat2 hisat2-align-l hisat2-align-s hisat2-build hisat2-build-l hisat2-build-s hisat2-inspect hisat2-inspect-l hisat2-inspect-s
hisat2_extract_exons.py hisat2_extract_snps_haplotypes_UCSC.py hisat2_extract_snps_haplotypes_VCF.py hisat2_extract_splice_sites.py hisat2_read_statistics.py hisat2_simulate_reads.py
}

# Set environment varialbles


# ---------------------------------------------------------------------
# Module key setup template
# ---------------------------------------------------------------------

# Combine Singularity exec command
set singularity_exec "singularity exec -B $SINGULARITY_BINDPATHS $SINGULARITY_FLAGS $SINGULARITY_IMAGE"

# Overwrite the list of commands upon loading
if { [ module-info mode load ] } {
    foreach cmd $cmds {
        if { [ module-info shelltype csh ] } {
            puts "alias $cmd $singularity_exec $cmd $*; "
        } elseif { [ module-info shelltype sh ] } {
            puts "$cmd () {"
            puts "    $singularity_exec $cmd $@"
            puts "}"
            #puts "export -f $cmd"
        }
    }
}

# Unset commands upon unloading
if { [ module-info mode unload ] } {
    foreach cmd $cmds {
        if { [ module-info shelltype csh ] } {
            puts "unalias $cmd"
        } elseif { [ module-info shelltype sh ] } {
            puts "unset -f $cmd"
        }
    }
}

# For "module help" and "module load"
if { [ module-info mode help ] || [ module-info mode load ] || [ module-info mode display ] } {
    puts stderr "
\[ Help information \]

1. This module only works on computing nodes (not available on head nodes). Make sure you start a job!

2. Below executables are available:
$cmds
"
}
proc ModulesHelp {} {
}
