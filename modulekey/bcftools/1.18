#%Module

# =====================================================================
# Generated by Containerized App Modulekey Producer (CAMP)
# Developer: Jason Li (jasonli3@lsu.edu)
# =====================================================================

# ---------------------------------------------------------------------
# Module setup (Edit this section for different modules)
# ---------------------------------------------------------------------

# Conflicts
conflict bcftools 

# Module information
module-whatis BCFtools is a program for variant calling and manipulating files in the Variant Call Format (VCF) and its binary counterpart BCF.
module-version 1.18

# Singularity options
set SINGULARITY_IMAGE "/home/admin/singularity/bcftools-1.18.sif"
set SINGULARITY_BINDPATHS ""
set SINGULARITY_FLAGS ""

# List of commands to overwrite
set cmds {
bcftools color-chrs.pl gff2gff.py guess-ploidy.py plot-roh.py plot-vcfstats run-roh.pl vcfutils.pl
}

# Set environment varialbles


# ---------------------------------------------------------------------
# Templates (Do not change this section)
# ---------------------------------------------------------------------

# Overwrite the list of commands upon loading
if { [ module-info mode load ] } {
    foreach cmd $cmds {
        if { [ module-info shelltype csh ] } {
            puts "alias $cmd singularity exec -B /work,/project,/usr/local/packages,/ddnA,/var/scratch,$SINGULARITY_BINDPATHS $SINGULARITY_FLAGS $SINGULARITY_IMAGE $cmd $*; "
        } elseif { [ module-info shelltype sh ] } {
            puts "$cmd () {"
            puts "    singularity exec -B /work,/project,/usr/local/packages,/ddnA,/var/scratch,$SINGULARITY_BINDPATHS $SINGULARITY_FLAGS $SINGULARITY_IMAGE $cmd $@"
            puts "}"
            puts "export -f $cmd"
        }
    }
}

# Unset commands upon unloading
if { [ module-info mode unload ] } {
    foreach cmd $cmds {
        if { [ module-info shelltype csh ] } {
            puts "unalias $cmd"
        } elseif { [ module-info shelltype sh ] } {
            puts "unset -f $cmd"
        }
    }
}

# For "module help" and "module load"
if { [ module-info mode help ] || [ module-info mode load ] || [ module-info mode display ] } {
    puts stderr "
\[ Help information \]

1. You may use below commands as normal:
$cmds
2. Those commands may only run on computing nodes (not available on head nodes). Make sure you start a job!
"
}
proc ModulesHelp {} {
}
