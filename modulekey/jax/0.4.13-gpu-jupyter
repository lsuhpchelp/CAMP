#%Module

# ---------------------------------------------------------------------
# Module setup (Edit this section for different modules)
# ---------------------------------------------------------------------

# Conflicts
conflict python pytorch

# Module information
module-whatis Tensorflow framework for deep learning, with GPU support, QT support, commonly us
module-version 0.4.13

# Singularity options
set SINGULARITY_IMAGE "/home/admin/singularity/jax-0.4.13-gpu-jupyter.sif"
set SINGULARITY_FLAGS "-B /work,/project,/usr/local/packages,/usr/local/compilers --nv"

# List of commands to overwrite
set cmds {python python3 pip pip3}

# Set environment varialbles


# ---------------------------------------------------------------------
# Templates (Do not change this section)
# ---------------------------------------------------------------------

# Overwrite the list of commands upon loading
if { [ module-info mode load ] } {
    foreach cmd $cmds {
        if { [ module-info shelltype csh ] } {
            puts "alias $cmd singularity exec $SINGULARITY_FLAGS $SINGULARITY_IMAGE $cmd $*; "
        } elseif { [ module-info shelltype sh ] } {
            puts "$cmd () {"
            puts "    singularity exec $SINGULARITY_FLAGS $SINGULARITY_IMAGE $cmd $@"
            puts "}"
        }
    }
}

# Unset commands upon unloading
if { [ module-info mode unload ] } {
    foreach cmd $cmds {
        if { [ module-info shelltype csh ] } {
            puts "unalias $cmd"
        } elseif { [ module-info shelltype sh ] } {
            puts "unset -f $cmd"
        }
    }
}

# For "module help" and "module load"
if { [ module-info mode help ] || [ module-info mode load ] || [ module-info mode display ] } {
    puts stderr "
\[ Help information \]

Thank you for using JAX module (beta)!

If you only need to run the latest JAX without much customization, this may be your solution.

1. Run your python code just like how you would normally run with following commands:

$cmds

2. Those commands may only run on computing nodes (not available on head nodes). Make sure you start a job!

3. You may still install modules using pip or pip3. You *MUST* do it on computing node with'--user' enabled.
"
}
proc ModulesHelp {} {
}
