#%Module

# =====================================================================
# Generated by CAMP (Containerized Application Modulekey Producer)
# Developer: Jason Li (jasonli3@lsu.edu)
# Description: 
#       1) This module template is tested with Environment Modules
#           >= 4.5.2. See https://github.com/cea-hpc/modules
#          May not be compatible with different module systems.
#       2) This template generates wrapper scripts in users' /work
#          directory, and works with MPI-enabled software packages.
# =====================================================================

# ---------------------------------------------------------------------
# Software specific information
# ---------------------------------------------------------------------

# Conflicts
conflict blast 

# Module information
module-whatis BLAST finds regions of similarity between biological sequences. The program compares nucleotide or protein sequences to sequence databases and calculates the statistical significance.
module-version 2.14.1

# Singularity options
set SINGULARITY_IMAGE "/home/admin/singularity/blast-2.14.1.sif"
set SINGULARITY_BINDPATHS "/work,/project,/usr/local/packages,/ddnA,/var/scratch,"
set SINGULARITY_FLAGS ""

# List of commands to overwrite
set cmds {
blastn blastp blastx tblastn tblastx
blast_formatter blast_formatter_vdb blast_vdb_cmd blastdb_aliastool blastdb_path blastdbcheck blastdbcmd blastn_vdb  convert2blastmask datatool deltablast dustmasker makeblastdb makembindex makeprofiledb project_tree_builder psiblast rpsblast rpstblastn run_with_lock segmasker tblastn_vdb test_pcre windowmasker
legacy_blast.pl update_blastdb.pl cleanup-blastdb-volumes.py windowmasker_2.2.22_adapter.py get_species_taxids.sh
}

# Set environment varialbles


# ---------------------------------------------------------------------
# Module key setup
# ---------------------------------------------------------------------

# Combine Singularity exec command
set singularity_exec "singularity exec -B $SINGULARITY_BINDPATHS $SINGULARITY_FLAGS --pwd \$PWD $SINGULARITY_IMAGE"

# Set wrapper directory
file mkdir /work/$env(USER)/.modulebin/blast/2.14.1
prepend-path PATH /work/$env(USER)/.modulebin/blast/2.14.1

# Create wrappers when the module is loaded
if { [ module-info mode load ] } {

    # If it is csh type shell
    if { [ module-info shelltype csh ] } {
    
        # Find shell header
        #puts "setenv shellheader '#\\!/bin/'`ps -p \$\$ -o comm=`;"
        #puts "if ( ! \$?prompt ) setenv shellheader `head -n1 \$0`;"
    
        # Create wrappers for each command
        foreach cmd $cmds {
            puts "echo '#\\!/bin/bash' > /work/\$USER/.modulebin/blast/2.14.1/$cmd;"
            puts "echo '$singularity_exec $cmd $@' >> /work/\$USER/.modulebin/blast/2.14.1/$cmd;"
            puts "chmod u+x /work/\$USER/.modulebin/blast/2.14.1/$cmd;"
        }
        
        # Refresh cache (only for csh type shell)
        puts "rehash;"
        
        # Unset shell header variable
        #puts "unsetenv shellheader;"
        
    # If it is sh type shell
    } elseif { [ module-info shelltype sh ] } {
    
        # Find shell header
        #puts "\[\[ -t 0 \]\] && shellheader='#!/bin/'`ps -p \$\$ -o comm=` || shellheader=`head -n1 \$0`;"
    
        # Create wrappers for each command
        foreach cmd $cmds {
            puts "echo '#!/bin/bash' > /work/\$USER/.modulebin/blast/2.14.1/$cmd;"
            puts "echo '$singularity_exec $cmd $@' >> /work/\$USER/.modulebin/blast/2.14.1/$cmd;"
            puts "chmod u+x /work/\$USER/.modulebin/blast/2.14.1/$cmd;"
        }
        
        # Unset shell header variable
        #puts "unset shellheader;"
    }
}

# Currently, wrappers will not be deleted to avoid unwanted issues.

# For "module help" and "module load"
if { [ module-info mode help ] || [ module-info mode load ] || [ module-info mode display ] } {
    puts stderr "
\[ Help information \]

1. This module only works on computing nodes (not available on head nodes). Make sure you start a job!

2. Below executables are available:
$cmds"
}
proc ModulesHelp {} {
}
